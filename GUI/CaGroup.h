/* Generated by Together */

#ifndef CAGROUP_H
#define CAGROUP_H
#include "CaObject.h"

class CaGroup : public CaObject {
private:
	static CaGroup *m_pCrrentGroup;
	CaObject **m_pList;
	CaObject **m_pFocusList;
	bool m_bFocusObjChanged;
protected:
	bool m_bEndFlag;
	/*! 当前获得焦点的对象*/
    CaObject *m_pCurObj; 
	virtual void Insert(CaObject***pList,int &oCount,CaObject *pObj,int index);
	virtual int Find( CaObject *const*pList,int count,const CaObject *pObj ) const;
	virtual int Remove(CaObject ***pList,int &oCount,CaObject *pObj);

	virtual int  FindFocusObj(const CaObject *pObj ) const;
	virtual void InsertFocusObj(CaObject *pObj,int index);
	virtual void RemoveFocusObj(CaObject *pObj);
	virtual void ClearFocusObj();
	virtual void ReCreateFocusList();

public:


	int m_iObjCount;
	int m_iFocusObjCount;

	int m_iLbWidth; //标签的宽度
	LABEL_POS m_labelPos; //标签的位置
	CaObject *CurObj(){return m_pCurObj;};
	void CurObj(CaObject* o){m_pCurObj=o;};
public:
	CaGroup(int objtype);
	CaGroup();
	virtual ~CaGroup();
	virtual bool GetRefreshFlag();
	virtual void ClearRefreshFlag();
	//-----------
	int ObjCount() const {return m_iObjCount;}
	int Find(const CaObject *obj);
	virtual  CaObject* const* ObjList() const;
    virtual void Add(CaObject *pObj);
	virtual void Insert(CaObject *pObj,int index);
	virtual void Remove(CaObject *pObj);
	virtual void Clear();

    //---------------------
	int FocusObjCount()const{return m_iFocusObjCount;}
	int CalFocusObjCount()const;
	virtual  CaObject* const* FocusObjList() const;
	virtual CaObject *NextFocusObj(CaObject *curObj);
	virtual CaObject *PreFocusObj(CaObject *curObj);

    //-----------------
    virtual int OnUpKey(void);
    virtual int OnDownKey(void);
    virtual int OnLeftKey(void);
    virtual int OnRightKey(void);
    virtual int OnTabKey(void);
    virtual int OnPgDnKey(void);
    virtual int OnPgUpKey(void);	
	
    //----------------
	virtual void Begin();
 	virtual void End(void);
    
	static CaGroup *GetCurrentGroup();
	static void SetCurrentGroup(CaGroup *g);

	//重新设置group的焦点到第一个可获得焦点的obj
	void ResetFocus();

/*	bool CurObjIsIME();*/
public: 
	//重载父类的方法
	virtual int  Create(int iX,int iY,int iW,int iH);
    virtual int  ProcEvent(int iEvent,unsigned char *pEventData, int iDataLen);
	virtual int  ReFresh(void);
	virtual int  SetFocus(void);	
//	virtual int  SetTitle(unsigned char * pData,int iLen);


};
#endif //CAGROUP_H


