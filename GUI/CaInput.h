 /* Generated by Together */

#ifndef CAINPUT_H
#define CAINPUT_H
#include "CaObject.h"
#include "lcd_tiny.h"


class CaInput : public CaObject {
public:
	enum{MAX_BUF_LEN=255};
	enum{MAX_LINE_LEN=32};
	enum{DEFAULT_MAX_LEN=32};
#if CHN_FONT_SIZE == 16
	enum{FOCUS_BUF_LEN=1,FOCUS_IMG_LEN=20};
#else
	enum{FOCUS_BUF_LEN=1,FOCUS_IMG_LEN=16};
#endif
	enum{INPUT_BOTTOM_LINE_H=1,SCROLL_LEN=4};
typedef enum _INPUT_TYPE{aCHAR=0,aINT,aFLOAT,aPASSWORD,aNULL}TYPE;
public:
	/*! 内容长度*/
	int m_iConLen;
	/*! 在屏幕上显示得长度*/
	int m_iScrLen;
	/*! 内容得最大长度*/
	int m_iConMaxLen;    
	/*! 屏幕显示得最大长度*/
	int m_iScrMaxLen; 
	/*! 光标在屏幕上的位置*/
	int m_iCurScrPos; 
	/*! 光标在内容上的位置 */
	int m_iCurConPos; 
	int m_iLbWidth;
	int m_iLbOffSet;
	
	bool m_bReadOnly;
	bool m_bDotFlag;
	TYPE m_InputType;
	ALIGN_TYPE m_alignType;
	LABEL_POS m_labelPos;
		
	unsigned char m_contentBuf[MAX_BUF_LEN];
	unsigned char m_dispBuf[MAX_LINE_LEN];
	unsigned char m_caImgBuf[MAX_LINE_LEN*IMG_BYTES+4];
	
static	unsigned char m_caFocusBuf[FOCUS_BUF_LEN];
static	unsigned char m_caFocusImgBuf[FOCUS_IMG_LEN];	


protected:
	virtual int  ReciveIntChar(int iEvent,char *pData,int iLen);
	virtual int	 ReciveFloatChar(int iEvent,char *pData,int iLen);
	virtual int	 ReciveStrChar(int iEvent,char *pData,int iLen);
	virtual void Insert(char *pData,int len,int scrIndex,int conIndex);
	virtual void Erase(int len,int srcIndex,int conIndex);
	virtual void ReciveLeftDirectKey(int iEvent);
	virtual void ReciveRightDirectKey(int iEvent);
	virtual void ReciveEraseKey(int iEvent);
public:
	/*!
		@brief 真正创建控件	
		@param iX 左上角横坐标
		@param iY 左上角纵坐标
		@param iW 宽度
		@param iH 高度
		@param pOwner 所属管理控件句柄
		@return <=-1 失败，>=0 成功
	*/
   virtual int	Create(int iX,int iY,int iW,int iH);
   virtual int  SetFocusIn();
   virtual int  SetFocus();
   virtual	int ReFresh();
   virtual int ProcEvent(int iEvent,unsigned char *pEventData, int iDataLen);

   CaInput(LABEL_POS lbPos,int lbWidth);
   CaInput();
   virtual ~CaInput();
   virtual int SetContentBuf(unsigned char *pData, int iLen);
   virtual void Clear(void);
   virtual bool IsEmpty(void);
   virtual void SetMaxLen(int mlen){m_iConMaxLen=mlen;}
   virtual void SetAlign(ALIGN_TYPE align){m_alignType=align;};
   static bool IsHZ(unsigned char *str);
   static int HalfHZCount(char *str,int len);

};
#endif //CAINPUT_H
