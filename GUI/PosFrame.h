/* Generated by Together */

#ifndef CAMAINWIN_H
#define CAMAINWIN_H
#include "CaWindow.h"
#include "CaIMEWin.h"
class CPosFrame {
public:
    enum {WIN_MAX_NUM=100};
protected:    
    static  CaWindow * m_pCurrWin;
    static  CaWindow * m_wpArray[WIN_MAX_NUM];
    static  unsigned char m_wCreatedFlag[WIN_MAX_NUM];
	static  char *   m_sWinName[WIN_MAX_NUM];
//     static  CaWindow * m_pQuWeiWin;
/*    static  CaWindow * m_pPinYinWin;*/
    static	CPosFrame * pThis;
public:
	static	CaIMEWin *m_pIMEWin;
	static void OnChangeIME(CaObject *obj,int iEvent, unsigned char * pEventData, int iDataLen);
    /** @link dependency */
    /*# CaWindow lnkCaWindow; */
public:
	CPosFrame();
	~CPosFrame();
	virtual int  ProcEvent(int iEvent, unsigned char *pEventData, int iDataLen);
	virtual bool Create();
	virtual CaWindow *GetWin(int id);
	virtual const char* GetWinName(int id)=0;
	virtual CaWindow *CreateWin(int id)=0;
	virtual void ChangeWin( CaWindow *win);
	virtual void ChangeWin( int id);
	
	static CPosFrame *Frame(void){return pThis;};
	static CaWindow *CurrWin() {return m_pCurrWin;};
	static void CurrWin( CaWindow *win){m_pCurrWin=win;};
	static bool RegsiterWin(CaWindow *win,int id);
	
	void SetWinResetFlag(int id, bool flag);//设置是否初始化窗口标志
	
	virtual void ReleaseWin(int id);
	virtual void ReleaseWin(CaWindow *win);
};
#endif //CAMAINWIN_H


